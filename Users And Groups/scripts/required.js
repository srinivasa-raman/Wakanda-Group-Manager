/*** @author admin*/var __myNameSpace 	= __myNameSpace || {};include('scripts/errors.js');include('scripts/utils.js');function loginHandler(login , password){	debugger;	var	ERRORS			= __myNameSpace.ERRORS,	sessionRef 		= currentSession(),	myUser 			= ds.User({login : login}),	groups			= myUser ? myUser.groups : null,	groupNames		= groups ? groups.toArray('name') : [];		if (myUser === null) {		myUser = directory.internalStore.User.find('name=:1' , login);				if(myUser != null && directory.computeHA1(login, password) == myUser.password){			var			theGroups = myUser.groups.toArray('name');						for(var i = 0 ; i<theGroups.length ; i++){				theGroups.push(theGroups[i].name);			}						return {				name		: myUser.name,				fullName	: myUser.fullName,				belongsTo	: theGroups,				storage		: {					ID		: myUser.ID,					role 	: theGroups				}			}		}	}	else {		if (myUser.validatePassword(password)) {			var			theGroups = [];						for(var _i = 0 , group ; group = groupNames[_i] ; _i++){				theGroups.push(group.name);			}						return {				name		: login,				fullName	: myUser.fullname,				belongsTo	: theGroups,				storage		: {					time		: new Date(),					firstname 	: myUser.firstname.toUpperCase(),					lastname 	: myUser.lastname,					email		: myUser.email,					ID			: myUser.ID				}			}		} else {			return ERRORS.login.passwordInvalid;		}	}		return ERRORS.login.doNotExist;}